#include <iostream>
#include <stack>
#include <string>

using namespace std;

// Define the Help Entity using a struct
struct HelpEntity {
    string title;       // Title of the help article
    string content;     // Detailed description or instructions
};

// HelpManager class manages the help content and its flow
class HelpManager {
private:
    HelpEntity helpContents[5];    // Array to store help content (5 entries)
    stack<int> helpStack;          // Stack to manage help content display order

public:
    // Constructor to initialize help content
    HelpManager() {
        // Initialize the help content
        helpContents[0] = {"How to add an event", "To add an event, click on 'Add Event', enter the title, description, date, and time."};  // Adding an event
        helpContents[1] = {"How to update an event", "To update an event, select the event from the calendar, edit the details, and save the changes."};  // Updating an event
        helpContents[2] = {"How to view events", "To view your events, go to the Calendar section and scroll through the days, weeks, or months."};  // Viewing events
        helpContents[3] = {"How to delete an event", "To delete an event, select the event from the calendar and click on the 'Delete' button."};  // Deleting an event
        helpContents[4] = {"How to categorize events", "To categorize an event, select a category when creating or editing an event. Categories include Work, Personal, etc."};  // Categorizing events

        // Push all help items initially onto the stack
        for (int i = 0; i < 5; i++) {
            helpStack.push(i);  // Add index of each help content to the stack
        }
    }

    // Method to display a help content by fetching it from the stack
    void displayHelp() {
        if (!helpStack.empty()) {
            int index = helpStack.top();
            helpStack.pop();  // Remove the item from the stack

            // Display the help content without Help ID and Category
            cout << "Title: " << helpContents[index].title << endl;
            cout << "Content: " << helpContents[index].content << endl << endl;
        } else {
            cout << "No more help content available." << endl;
        }
    }

    // Method to display all help content initially
    void displayAllHelp() {
        cout << "Displaying all Help Content: \n";
        for (int i = 0; i < 5; i++) {
            cout << "Title: " << helpContents[i].title << endl;
            cout << "Content: " << helpContents[i].content << endl << endl;
        }
    }
};

int main() {
    // Create an instance of HelpManager
    HelpManager helpManager;

    // Display all help content initially
    helpManager.displayAllHelp();

    // Display help content one by one from the stack
    cout << "Displaying Help Content from the Stack:\n";
    helpManager.displayHelp();  // Display the last pushed help content
    helpManager.displayHelp();  // Display the second-to-last pushed content
    helpManager.displayHelp();  // Display the third-to-last pushed content
    helpManager.displayHelp();  // Display the fourth-to-last pushed content
    helpManager.displayHelp();  // Display the first pushed content
    helpManager.displayHelp();  // No more content

    return 0;
}
